ADAPTER ::

    HEADER_FIELDS ::
      { 'X-Parse-Application-Id' : $PARSE_APPLICATION_ID }, 
      { 'X-Parse-REST-API-Key ' : $PARSE_REST_API_ID }, 
      { 'X-Parse-Session-Token' : $LOGGED_IN_USER.sessionToken } 
    ;
    BASE_URL :: 'https://api.parse.com' ;
    TIMEOUT_INTERVAL :: 20 ; # 20 seconds
 
 # ****** LOGIN ******** 
    URL_BINDINGS :: 
      URL_BINDING ::
        LIFECYCLE :: LOGIN ;
        REQUEST_METHOD :: GET ;
        REQUEST_FORMAT :: NO_DATA ;
        END_POINT :: ( '1/login' ) ;
        END_POINT_PARAMETERS :: 
          { 'username' : $USER_NAME.lowercaseString }, 
          { 'password' : $PASSWORD } 
        ;
        CMO_BINDING :: $$PARSE_CMO_BINDING ;
        ENTITIES :: ( $USER_ENTITY ) ;

 # ****** PASSWORD_RESET ******** 
      URL_BINDING ::
        LIFECYCLE :: PASSWORD_RESET ;
        REQUEST_METHOD :: POST ;
        REQUEST_FORMAT :: JSON ;
        END_POINT :: ( '1/requestPasswordReset' ) ;
        JSON_BINDING :: 
          { 'email' : $EMAIL }
        ;

 # ****** CREATE ******** 
      URL_BINDING ::
        LIFECYCLE :: CREATE ;
        REQUEST_METHOD :: POST ;
        REQUEST_FORMAT :: JSON ;
        END_POINT :: '1/users' ;
        CMO_BINDING :: $$PARSE_CMO_BINDING ;
        ENTITIES :: ( $USER_ENTITY ) ;

      URL_BINDING ::
        LIFECYCLE :: CREATE ;
        REQUEST_METHOD :: POST ;
        REQUEST_FORMAT :: JSON ;
        END_POINT :: ( '1/classes/' + $ENTITY.name ) ;
        CMO_BINDING :: $$PARSE_CMO_BINDING ;
        ENTITIES :: ALL_EXCEPT ( $USER_ENTITY ) ;

 # ****** UPDATE ******** 
      URL_BINDING ::
        LIFECYCLE :: UPDATE ;
        REQUEST_METHOD :: PUT ;
        REQUEST_FORMAT :: JSON ;
        END_POINT :: ( '1/users/' + $CMOID ) ;
        CMO_BINDING :: $$PARSE_CMO_BINDING;
        ENTITIES :: ( $USER_ENTITY ) ;

      URL_BINDING ::
        LIFECYCLE :: UPDATE ;
        REQUEST_METHOD :: PUT ;
        REQUEST_FORMAT :: JSON ;
        END_POINT :: ( '1/classes/' + $ENTITY.name + '/' + $CMOID ) ;
        CMO_BINDING :: $$PARSE_CMO_BINDING;
        ENTITIES :: ALL_EXCEPT ( $USER_ENTITY ) ;

 # ****** DESTROY ******** 
      URL_BINDING ::
        LIFECYCLE :: DESTROY ;
        REQUEST_METHOD :: DELETE ;
        REQUEST_FORMAT :: NO_DATA ;
        END_POINT :: ( '1/classes/' + $ENTITY.name + '/' + $CMOID ) ;
        ENTITIES :: ALL_EXCEPT ( $USER_ENTITY ) ;

 # ****** RETRIEVE_SERVER_RECORD ******** 
      URL_BINDING ::
        LIFECYCLE :: RETRIEVE_SERVER_RECORD ;
        REQUEST_METHOD :: GET ;
        REQUEST_FORMAT :: NO_DATA ;
        END_POINT :: ( '1/user/' + $CMOID ) ;
#        END_POINT_PARAMETERS :: 
#            { 'keys' : # TODO : We should derrive this from END_POINT.ATTRIBUTE_BINDINGS.ATTRIBUTES } ,
        CMO_BINDING :: $$PARSE_CMO_BINDING ;
        ENTITIES :: ( $USER_ENTITY ) ;

      URL_BINDING ::
        LIFECYCLE :: RETRIEVE_SERVER_RECORD ;
        REQUEST_METHOD :: GET ;
        REQUEST_FORMAT :: NO_DATA ;
        END_POINT :: ( '1/classes/' + $ENTITY.name + '/' + $CMOID ) ;
        CMO_BINDING :: $$PARSE_CMO_BINDING;
        ENTITIES :: ALL_EXCEPT ( $USER_ENTITY );

 # ****** RETRIEVE_SERVER_RECORDS ******** 
      URL_BINDING ::
        LIFECYCLE :: RETRIEVE_SERVER_RECORDS ;
        REQUEST_METHOD :: GET ;
        REQUEST_FORMAT :: NO_DATA ;
        END_POINT :: ( '1/classes/' + $ENTITY.name ) ;
        END_POINT_PARAMETERS :: 
          { 'limit' : $PARSE_RECORD_LIMIT } ,
          { 'skip' : $PARSE_RECORD_SKIP } ,
#          ('keys=' + TODO : We should derrive this from END_POINT.ATTRIBUTE_BINDINGS.ATTRIBUTES) ,
          { 'where' : $DSLQUERY } 
        ;
        CMO_BINDING :: $$PARSE_CMO_BINDING;
        ENTITIES :: ALL_EXCEPT ( $USER_ENTITY ) ;

 # ****** RETRIEVE_SERVER_RECORD_COUNT ******** 
      URL_BINDING ::
        LIFECYCLE :: RETRIEVE_SERVER_RECORD_COUNT ;
        REQUEST_METHOD :: GET ;
        REQUEST_FORMAT :: NO_DATA ;
        END_POINT :: ( '1/classes/' + $ENTITY.name ) ;
        END_POINT_PARAMETERS :: 
          { 'limit' : '0' }, 
          { 'count' : '1' } 
        ;
        CMO_BINDING :: $$PARSE_CMO_BINDING;
        ENTITIES :: ALL_EXCEPT ( $USER_ENTITY );

 # ****** RETRIEVE_RELATIONSHIP ******** 
      URL_BINDING ::
        LIFECYCLE :: RETRIEVE_RELATIONSHIP ;
        BINDING_OPTIONS :: UNORDERED | ORDERED | ONE_TO_ONE ;
        REQUEST_METHOD :: GET ;
        REQUEST_FORMAT :: NO_DATA ;
        END_POINT :: ( '1/user/' + $CMOID ) ;
#        END_POINT_PARAMETERS :: 
#            { 'keys' : # TODO : We should derrive this from END_POINT.ATTRIBUTE_BINDINGS.ATTRIBUTES } ,
        CMO_BINDING :: $$PARSE_CMO_BINDING ;
        RELATIONSHIPS :: ALL ;
        ENTITIES :: ( $USER_ENTITY ) ;

      URL_BINDING ::
        LIFECYCLE :: RETRIEVE_RELATIONSHIP ;
        BINDING_OPTIONS :: UNORDERED | ORDERED | ONE_TO_ONE ;
        REQUEST_METHOD :: GET ;
        REQUEST_FORMAT :: NO_DATA ;
        END_POINT :: ( '1/classes/' + $ENTITY.name + '/' + $CMOID ) ;
        CMO_BINDING :: $$PARSE_CMO_BINDING;
        RELATIONSHIPS :: ALL ;
        ENTITIES :: ALL_EXCEPT ( $USER_ENTITY );


      URL_BINDING ::
        LIFECYCLE :: RETRIEVE_RELATIONSHIP ;
        BINDING_OPTIONS :: UNORDERED | ORDERED | ONE_TO_MANY ;
        REQUEST_METHOD :: GET ;
        REQUEST_FORMAT :: NO_DATA ;
        END_POINT :: ( '1/classes/' + $ENTITY.name ) ;
        END_POINT_PARAMETERS :: 
            { 'limit' : $PARSE_RECORD_LIMIT }, 
            { 'where' : ( '{ "' + $RELDESC.inverseRelationship.name + '" : { ' +
                '"__type" : "Pointer", ' +
                '"className" : "' + $RELDESC.entity.parseClassName + '", ' +
                '"objectId" : "' + $OWNERID + '" ' +
                '} }' )
            } 
        ;
        CMO_BINDING :: $$PARSE_CMO_BINDING;
        RELATIONSHIPS :: ALL ;
        ENTITIES :: ALL ;
    ;

 # ****** SHARED_BINDINGS ******** 
  SHARED_BINDINGS ::

    $$PARSE_CMO_BINDING ::
      CMO_BINDING ::
        ATTRIBUTE_BINDINGS ::
          ID_ATTRIBUTE { $ATTRDESC.name : $ATTRDESC.name } 
              ATTRIBUTES :: ( 'objectId' ), 
          { $ATTRDESC.name : $ATTRDESC.name } 
              ATTRIBUTES :: ALL_EXCEPT  ( 'objectId', 'emailVerified', 'sessionToken', 'password' ), 
          { 'password' : $PASSWORD } ATTRIBUTES:: ( 'password' ), 
          RECEIVE_ONLY_ATTRIBUTE { $ATTRDESC.name : $ATTRDESC.name } 
              ATTRIBUTES :: ( 'emailVerified', 'sessionToken' ) 
        ;

        RELATIONSHIP_BINDINGS :: 
          RELATIONSHIP_BINDING :: 
            JSON_BINDING :: 
              { ( $RELDESC.name + '.__type' ) : 'Pointer' }, 
              { ( $RELDESC.name + '.className' ) : $RELDESC.destinationEntity.parseClassName }, 
              { ( $RELDESC.name + '.objectId' ) : $CMO.`$RELDESC.destinationEntity.name`.jsonIdValue } ;
            JSON_ID_BINDING :: ( $RELDESC.name + '.objectId' ) ;
            RELATIONSHIPS :: ALL ;
            ENTITIES :: ALL ; 
        ;

        ENTITIES :: ALL ; 
      ;
    ;
  ;
;
